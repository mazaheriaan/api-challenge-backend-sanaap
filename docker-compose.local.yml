volumes:
  sanaap_api_challenge_local_postgres_data: {}
  sanaap_api_challenge_local_postgres_data_backups: {}
  sanaap_api_challenge_local_redis_data: {}
  sanaap_api_challenge_local_minio_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: sanaap_api_challenge_local_django
    container_name: sanaap_api_challenge_local_django
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - /app/.venv
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: sanaap_api_challenge_production_postgres
    container_name: sanaap_api_challenge_local_postgres
    volumes:
      - sanaap_api_challenge_local_postgres_data:/var/lib/postgresql/data
      - sanaap_api_challenge_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: docker.io/redis:6
    container_name: sanaap_api_challenge_local_redis
    volumes:
      - sanaap_api_challenge_local_redis_data:/data

  celeryworker:
    <<: *django
    image: sanaap_api_challenge_local_celeryworker
    container_name: sanaap_api_challenge_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  minio:
    image: quay.io/minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: sanaap_api_challenge_local_minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    env_file:
      - ./.envs/.local/.minio
    volumes:
      - sanaap_api_challenge_local_minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
